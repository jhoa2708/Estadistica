cor(Datos_1_Num_CT, method = c("pearson"))
library("Hmisc")
res2 <- rcorr(as.matrix(Datos_1_Num_CT))
res2
View(res2)
res2
res2$r
res2$P
as.matrix(Datos_1_Num_CT)
View(Datos_1_Num_CT)
Datos_1_Num_CT
library("Hmisc")
res2 <- rcorr(Datos_1_Num_CT, type=c("pearson"))
res2
library(Hmisc)
res2<-rcorr(as.matrix(Datos_1_Num_CT))
flattenCorrMatrix(res2$r, res2$P)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
res2<-rcorr(as.matrix(Datos_1_Num_CT))
flattenCorrMatrix(res2$r, res2$P)
View(Corr)
View(Corr_CT)
symnum(Corr_CT, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95),
symbols = c(" ", ".", ",", "+", "*", "B"),
abbr.colnames = TRUE)
symnum(Corr_CT, abbr.colnames = FALSE)
symnum(Upper_Corr_CT, abbr.colnames = FALSE)
library(corrplot)
corrplot(Corr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(Corr, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(Corr_TH, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(Corr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
View(Corr_CT)
# Insignificant correlation are crossed
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
library("PerformanceAnalytics")
my_data <-Datos_1_Num_CT
chart.Correlation(my_data, histogram=TRUE, pch=19)
library("PerformanceAnalytics")
my_data <-Datos_1_Num_CT[,c(1:5)]
chart.Correlation(my_data, histogram=TRUE, pch=19)
library("PerformanceAnalytics")
my_data <-Datos_1_Num_CT[,c(6:10)]
chart.Correlation(my_data, histogram=TRUE, pch=19)
# Get some colors
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
ggcorr(Datos_1_Num_CT,
label = TRUE,
label_alpha = TRUE)
library("Ggally")
library("GGally")
ggcorr(Datos_1_Num_CT,
label = TRUE,
label_alpha = TRUE)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
flattenCorrMatrix(Corr_CT$r, Corr_CT$P)
res2<-Corr_CT
flattenCorrMatrix(res2$r, res2$P)
Corr_CT_1<- rcorr(as.matrix(Datos_1_Num_CT))
flattenCorrMatrix(Corr_CT_1$r, Corr_CT_1$P)
symnum(Corr_CT_1,
symbols = c(" ", ".", ",", "+", "*", "B"),
abbr.colnames = TRUE)
symnum(Corr_CT_1, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95),
symbols = c(" ", ".", ",", "+", "*", "B"),
abbr.colnames = TRUE)
symnum(Corr_CT, abbr.colnames = FALSE)
> flattenCorrMatrix(Corr_CT$r, Corr_CT$P)
flattenCorrMatrix(Corr_CT_1$r, Corr_CT_1$P)
library(corrplot)
corrplot(Corrr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(Corr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Insignificant correlation are crossed
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlation are crossed
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
# Insignificant correlation are crossed
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlation are crossed
corrplot(Corr_CT$r, type="upper", order="hclust",
p.mat = Corr_CT$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
library(readxl )
Datos_1 <- read_excel("D:/TESIS_rev/TESIS_DATA/Datos_estadistica_ordenados_1.xlsx")
Datos_1 <- as.data.frame(Datos_1)
Datos_1 <- data.frame(Datos_1[,-1], row.names=Datos_1[,1])
Datos_1_Num <-Datos_1[,c(1:51)]
Datos_1_Num_TS<-Datos_1_Num[c(0:10),]
Datos_1_Num_TH<-Datos_1_Num[c(11:20),]
Datos_1_Num_CT<-Datos_1_Num[,c(1:7,12,17,22,27,32,37,42,47)]
Corr<-round(cor(Datos_1_Num),2)
Corr_TS<-round(cor(Datos_1_Num_TS),2)
Corr_TH<-round(cor(Datos_1_Num_TH),2)
Corr_CT<-round(cor(Datos_1_Num_CT),2)
Upper_Corr_CT<-Corr_CT
Upper_Corr_CT[lower.tri(Upper_Corr_CT)]<-""
Upper_Corr_CT<-as.data.frame(Upper_Corr_CT)
library("Hmisc")
Corr_CT_1<- rcorr(as.matrix(Datos_1_Num_CT))
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
Corr_CT_1<- rcorr(as.matrix(Datos_1_Num_CT))
symnum(Corr_CT, abbr.colnames = FALSE)
library(corrplot)
corrplot(Corr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Insignificant correlation are crossed
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
library("PerformanceAnalytics")
chart.Correlation(Datos_1_Num_CT[,(0:5)], histogram=TRUE, pch=19)
library(readxl )
Datos_1 <- read_excel("D:/TESIS_rev/TESIS_DATA/Datos_estadistica_ordenados_1.xlsx")
Datos_1 <- as.data.frame(Datos_1)
Datos_1 <- data.frame(Datos_1[,-1], row.names=Datos_1[,1])
Datos_1_Num <-Datos_1[,c(1:51)]
Datos_1_Num_TS<-Datos_1_Num[c(0:10),]
Datos_1_Num_TH<-Datos_1_Num[c(11:20),]
Datos_1_Num_CT<-Datos_1_Num[,c(1:7,12,17,22,27,32,37,42,47)]
Corr<-round(cor(Datos_1_Num),2)
Corr_TS<-round(cor(Datos_1_Num_TS),2)
Corr_TH<-round(cor(Datos_1_Num_TH),2)
Corr_CT<-round(cor(Datos_1_Num_CT),2)
Upper_Corr_CT<-Corr_CT
Upper_Corr_CT[lower.tri(Upper_Corr_CT)]<-""
Upper_Corr_CT<-as.data.frame(Upper_Corr_CT)
library("Hmisc")
Corr_CT_1<- rcorr(as.matrix(Datos_1_Num_CT))
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
Corr_CT_1<- rcorr(as.matrix(Datos_1_Num_CT))
symnum(Corr_CT, abbr.colnames = FALSE)
library(corrplot)
corrplot(Corr_CT, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(readxl )
Datos_1 <- read_excel("D:/TESIS_rev/TESIS_DATA/Datos_estadistica_ordenados_1.xlsx")
Datos_1 <- as.data.frame(Datos_1)
Datos_1 <- data.frame(Datos_1[,-1], row.names=Datos_1[,1])
Datos_1_Num <-Datos_1[,c(1:51)]
Datos_1_Num_TS<-Datos_1_Num[c(0:10),]
Datos_1_Num_TH<-Datos_1_Num[c(11:20),]
Datos_1_Num_CT<-Datos_1_Num[,c(1:7,12,17,22,27,32,37,42,47)]
corrplot(cor(Datos_1_Num), method="ellipse")
corrplot(cor(Datos_1_Num_CT), method="ellipse")
corrplot(cor(Datos_1_Num_CT), method="color")
qgraph(cor(Datos_1_Num_CT))
library("qgraph", lib.loc="~/R/win-library/3.5")
install.packages("qgraph")
qgraph(cor(Datos_1_Num_CT))
qgraph(cor(Datos_1_Num_CT))
library("qgraph")
qgraph(cor(Datos_1_Num_CT))
qgraph(cor(Datos_1_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
install.packages("psych")
library(psych)
# PCA using psych
RF_pca_1 <- principal(Datos_1_Num_CT, nfactors=3, rotate="none")
RF_pca_1
library(psych)
# PCA using psych
RF_pca_1 <- principal(Datos_1_Num_CT, nfactors=3, rotate="none")
RF_pca_1
library(psych)
# PCA using psych
RF_pca_1 <- principal(as.matrix(Datos_1_Num_CT), nfactors=3, rotate="none")
qgraph(RF_pca_1, layout="spring", posCol="darkgreen", negCol="darkmagenta", arrows=FALSE, edge.width=2add=FALSE
qgraph(RF_pca_1, layout="spring", posCol="darkgreen", negCol="darkmagenta", arrows=FALSE, edge.width=2add=FALSE)
qgraph(RF_pca_1)
library(GGally)
qgraph(RF_pca_1)
library("qgraph")
qgraph(RF_pca_1)
RF_pca_1
RF_pca
RF_pca<- princomp(Datos_1_Num_CT, cor=T)
qgraph(RF_pca_1)
qgraph(RF_pca)
qgraph(RF_pca)
Datos_1_Num_1<-data.matrix(Datos_1_Num_CT)
View(Datos_1_Num_1)
RF_pca<- princomp(Datos_1_Num_1, cor=T)
RF_pca
qgraph(RF_pca)
qgraph(data.matrix(RF_pca)
qgraph(data.matrix(RF_pca))
qgraph(data.matrix(RF_pca))
RF_pca_1<-data.matrix(RF_pca)
qgraph(data.matrix(RF_pca_1)
qgraph(data.matrix(RF_pca_1)
qgraph(data.matrix(RF_pca_1)
qg_pca <- qgraph(RF_pca_1, layout="spring", posCol="darkgreen", negCol="darkmagenta", arrows=FALSE, edge.width=2, add=FALSE)
qg_pca <- qgraph(RF_pca_1, layout="spring", posCol="darkgreen", negCol="darkmagenta", arrows=FALSE, edge.width=2, add=FALSE)
library(readxl )
Datos<- read_excel("D:/TESIS_rev/TESIS_DATA/Datos_estadistica_ordenados_1.xlsx")
#Convierto datos en dataframe
Datos <- as.data.frame(Datos)
Datos <- data.frame(Datos[,-1], row.names=Datos[,1])
#################################
#Creo las variables iniciales
#Datos concentraciones totales
Datos_CT<-Datos[,c(1:7,12,17,22,27,32,37,42,47,52,53)]
#Concentraciones totales solo numeros
Datos_Num <-Datos[,c(1:51)]
#Concentraciones totales solo numeros
Datos_Num_CT<-Datos_Num[,c(1:7,12,17,22,27,32,37,42,47)]
#Temporada seca  solo numeros
Datos_Num_TS<-Datos_Num[c(0:10),]
#Temporada humeda  solo numeros
Datos_Num_TH<-Datos_Num[c(11:20),]
#################################
#Correlacion de datos(Solo se puede usar datos numericos)
#Todos los datos
Corr<-round(cor(Datos_Num),2)
#Temporada seca
Corr_TS<-round(cor(Datos_Num_TS),2)
#Temporada humeda
Corr_TH<-round(cor(Datos_Num_TH),2)
#Concentraciones totales
Corr_CT<-round(cor(Datos_Num_CT),2)
# Solo triangulo superior para concentraciones totales
Upper_Corr_CT<-Corr_CT
Upper_Corr_CT[lower.tri(Upper_Corr_CT)]<-""
Upper_Corr_CT<-as.data.frame(Upper_Corr_CT)
print(Upper_Corr_CT)
#De ahora en adelante se usará los valores para la correlacion de concentraciones totales
#Tabla de valores de correlacion y pearson
library("Hmisc")
Corr_CT_1<- rcorr(as.matrix(Datos_Num_CT))
# flattenCorrMatrix
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
flattenCorrMatrix(Corr_CT_1$r, Corr_CT_1$P)
#Tabla con codificacion simbolica
symnum(Corr_CT, abbr.colnames = FALSE)
library(corrplot)
#Grafica sin numeros
Correlacion_1.plot<-corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
Correlacion_2<-corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
Heatmap_1<-heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
library(GGally)
Heatmap_2<-ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
#Correlacion con Qgraph
library("qgraph")
Correlacion_3<-qgraph(cor(Datos_Num_CT))
Correlacion_4<-qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
pdf("Correlacion.pdf") # Create a new pdf device
Correlacion_1
Correlacion_2
Correlacion_3
Correlacion_4
Heatmap_1
Heatmap_2
dev.off() # Close the pdf device
Correlacion_1
Correlacion_1<-corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
Correlacion_1
pdf("Correlacion.pdf") # Create a new pdf device
Correlacion_1
Correlacion_2
Correlacion_3
Correlacion_4
Heatmap_1
Heatmap_2
dev.off() # Close the pdf device
print(correlacion_1)
Correlacion_1<-corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
print(correlacion_1)
print(Correlacion_1)
# Create a new pdf device
pdf("Correlacion.pdf")
#Grafica sin numeros
corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
#Correlacion con Qgraph
qgraph(cor(Datos_Num_CT))
qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
dev.off() # Close the pdf device
library(corrplot)
library(GGally)
library(qgraph)
# Create a new pdf device
pdf("Correlacion_todo.pdf")
#Grafica sin numeros
corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
#Correlacion con Qgraph
qgraph(cor(Datos_Num_CT))
qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
dev.off() # Close the pdf device
setwd("D:/TESIS_rev/TESIS_DATA/Estadistica")
pdf("Correlacion_todo.pdf")
#Grafica sin numeros
corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
#Correlacion con Qgraph
qgraph(cor(Datos_Num_CT))
qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
dev.off() # Close the pdf device
# Create a new pdf device
pdf("Correlacion_todo.pdf")
#Grafica sin numeros
corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Correlacion con Qgraph
qgraph(cor(Datos_Num_CT))
qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
dev.off() # Close the pdf device
# Create a new pdf device
pdf("Correlacion_todo.pdf")
#Grafica sin numeros
corrplot(Corr_CT,type = "upper", order = "hclust",tl.col = "black", tl.srt = 45)
#Grafica con numeros y mejor dividida
# Insignificant correlations are leaved blank
corrplot(Corr_CT_1$r, type="upper", order="hclust",
p.mat = Corr_CT_1$P, sig.level = 0.01, insig = "blank")
#Correlacion con Qgraph
qgraph(cor(Datos_Num_CT))
qgraph(cor(Datos_Num_CT), layout="spring", posCol="darkgreen", negCol="darkmagenta")
#Grafico con histogramas y  significancia
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = Corr_CT, col = col, symm = TRUE)
#Heatmap con "TRUE" or "FALSE" to see how the correlation matrix changes
ggcorr(Corr_CT,label = TRUE,label_alpha = FALSE)
dev.off() # Close the pdf device
pdf("PCA_1.pdf")
Datos_CT_pca<- princomp(Datos_Num_CT, cor=T)
screeplot(Datos_CT_pca)
biplot(Datos_CT_pca, col=c("black","red"), cex=c(0.7,0.8))
dev.off() # Close the pdf device
pdf("PCA_2.pdf")
# en vez de Datos_1[,c(1:51)] puede ser Datos_1_Num
Datos.pca <- prcomp(Datos[,c(1:51)], center = TRUE,scale. = TRUE)
library(ggbiplot)
ggbiplot(Datos.pca,labels=rownames(Datos))
#Se crean caracteres de las columnas con las que se quieren hacer elipses
a<-unlist(Datos[52], recursive = TRUE, use.names = TRUE)
b<-unlist(Datos[53], recursive = TRUE, use.names = TRUE)
ggbiplot(Datos.pca,ellipse=TRUE,  labels=rownames(Datos_1), groups=a)
ggbiplot(Datos.pca,ellipse=TRUE,  labels=rownames(Datos_1), groups=b)
dev.off() # Close the pdf device
pdf("PCA_2.pdf")
# en vez de Datos_1[,c(1:51)] puede ser Datos_1_Num
Datos.pca <- prcomp(Datos[,c(1:51)], center = TRUE,scale. = TRUE)
library(ggbiplot)
ggbiplot(Datos.pca,labels=rownames(Datos))
#Se crean caracteres de las columnas con las que se quieren hacer elipses
a<-unlist(Datos[52], recursive = TRUE, use.names = TRUE)
b<-unlist(Datos[53], recursive = TRUE, use.names = TRUE)
ggbiplot(Datos.pca,ellipse=TRUE,  labels=rownames(Datos), groups=a)
ggbiplot(Datos.pca,ellipse=TRUE,  labels=rownames(Datos), groups=b)
dev.off() # Close the pdf device
pdf("PCA_3.pdf")
#PCA con Principal
library("psych")
#Sin rotacion
Datos_CT_pca_unrot <- principal(Datos_Num_CT, nfactors=3, rotate="none")
qg_pca_rot<-qgraph(loadings(Datos_CT_pca_unrot), posCol="darkgreen", layout="spring", negCol="darkmagenta", edge.width=2)
qgraph(qg_pca_unrot, layout="spring", posCol="darkgreen", negCol="darkmagenta", edge.width=2)
Datos_CT_pca_rot <- principal(Datos_Num_CT, nfactors=3, rotate="varimax")
qg_pca_rot<-qgraph(loadings(Datos_CT_pca_unrot), posCol="darkgreen", layout="spring", negCol="darkmagenta", edge.width=2)
qgraph(qg_pca_rot, layout="spring", posCol="darkgreen", negCol="darkmagenta", edge.width=2)
dev.off() # Close the pdf device
pdf("PCA_3.pdf")
#PCA con Principal
library("psych")
#Sin rotacion
Datos_CT_pca_unrot <- principal(Datos_Num_CT, nfactors=3, rotate="none")
qg_pca_unrot<-qgraph(loadings(Datos_CT_pca_unrot), posCol="darkgreen", layout="spring", negCol="darkmagenta", edge.width=2)
qgraph(qg_pca_unrot, layout="spring", posCol="darkgreen", negCol="darkmagenta", edge.width=2)
#Con rotacion varimax
Datos_CT_pca_rot <- principal(Datos_Num_CT, nfactors=3, rotate="varimax")
qg_pca_rot<-qgraph(loadings(Datos_CT_pca_rot), posCol="darkgreen", layout="spring", negCol="darkmagenta", edge.width=2)
qgraph(qg_pca_rot, layout="spring", posCol="darkgreen", negCol="darkmagenta", edge.width=2)
dev.off() # Close the pdf device
pdf("Heatmap.pdf")
# scale data to mean=0, sd=1 and convert to matrix
Datos_scaled <- as.matrix(scale(Datos_Num))
# create heatmap and don't reorder columns
heatmap(Datos_scaled, Colv=F, scale='none')
# cluster rows
hc.rows <- hclust(dist(Datos_scaled))
plot(hc.rows)
# transpose the matrix and cluster columns
hc.cols <- hclust(dist(t(Datos_scaled)))
plot(hc.cols)
# draw heatmap for first cluster
heatmap(Datos_scaled[cutree(hc.rows,k=2)==1,], Colv=as.dendrogram(hc.cols), scale='none')
# draw heatmap for second cluster
heatmap(Datos_scaled[cutree(hc.rows,k=2)==2,], Colv=as.dendrogram(hc.cols), scale='none')
dev.off() # Close the pdf device
